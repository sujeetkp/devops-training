docker ps
docker ps -a

docker logs <container_id>
docker logs -f <container_id>

docker build -t sujeetkp/python3:1.0 .
docker build --no-cache -t sujeetkp/python3:1.0 .
docker build -t sujeetkp/python3:1.0 /path/to/dockerfile/directory
docker build -t sujeetkp/python3:1.0 -f <dockerfile_name> /path/to/dockerfile/directory

docker run <image_name>
docker run -d <image_name>
docker run -d -p <host_port>:<container_port> <image_name>
docker run -d -v <vol_name>:<container_path> <image_name>
docker run -d -ti -v demo:/shared alpine
docker run -d -v <localhost_path>:<container_path> <image_name>
docker run -d -p 8080:80 -v /home/azureuser/devops-training/Docker/apache:/var/www/html sujeetkp/apache-local
docker run -d -e <environment_var_name>:<value> <image_name>
docker run -d -e DB_SERVER:mydb.example.com <image_name>
docker exec -ti <container_id> bash/sh

docker inspect <container_id/volume_id/image_id> 

docker system prune
docker system prune -a
docker kill $(docker ps -q)
docker rm $(docker ps -q -a)
docker rmi $(docker images -q)
docker volume rm $(docker volume ls -q)

docker stop <container_id>
docker kill <container_id>
docker rm <container_id>

docker images
docker image rm <image_id>
docker rmi <image_id>

docker volume ls
docker volume create <vol_name>
docker volume rm <vol_name>

docker network ls
docker network create <network_name>
docker network rm <network_name>

docker-compose up
docker-compose up -d
docker-compose down
docker-compose stop