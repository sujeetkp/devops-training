apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default #tech-1
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group - apis/v1
  resources: ["pods"]
  #resourceNames: ["my-pod"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""] # "" indicates the core API group - apis/v1
  resources: ["service"]
  verbs: ["get", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
subjects:
# You can specify more than one "subject"
- kind: User
  name: jane # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: admin # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: my-sa # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
  namespace: default

---


apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: read-pods-aad
  namespace: default
subjects:
# You can specify more than one "subject"
- kind: User
  name: Dave@sumeetkp0201gmail.onmicrosoft.com   # Object ID from different tenant - 7bcc329e-88a9-4c45-bc97-6f363ee6f5a3
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: 462b2fad-0405-4b37-8abb-bd68e4b6cda7   # Group Object ID
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io